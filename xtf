#!/bin/bash
POSIXLY_CORRECT=yes
arg_count=$#

# Remove before submit
#echo "$arg_count"
function unqote()
{
  echo "$1"
  return echo "$1" | tr -d '"' | tr -d "'"
}
read_file() {
  local file_name="$1"
  # Check if file exists
  if [[ ! -f "$file_name" ]]; then
    #exit 1
    return 1
  fi
  local file_type="$(file -b "$file_name")"

  # Check if file is gzipped
  if [[ "$file_type" == *"gzip compressed"* ]]; then
    # Use gunzip to decompress and read the file
    echo "$(gunzip -c "$file_name")"
  else
    # Use cat to print the content of the uncompressed file
    echo "$(cat "$file_name")"
  fi
}
read_multiple_files(){
  for i in $(seq 1 $arg_count);do
    if test -f "${!i}"; then
      local out=$(read_file "${!i}")
     echo "$out"
    fi
  done
}


  is_next_currency="false"
  curr_arg=1
  for arg in "$@"
  do
    if [ "$is_next_currency" = "true" ]; then
      #echo "$curr_arg"
      curr_arg=`expr $curr_arg + 1` # TODO: find out how to do arithmetics and select argument by variable
      if [[ "$curr_selector"==".*" ]]; then
        curr_selector="[a-zA-Z _ \\. \\-]*\\;[0-9 : \\-]*;$arg\\;"
        else
        curr_selector="|$curr_selector[a-zA-Z _ \\. \\-]*\\;[0-9 : \\-]*;$arg\\;"
      fi
      is_next_currency="false"
    fi
    if [ "$arg" = "-c" ]; then
      curr_arg=`expr $curr_arg + 1`
      is_next_currency="true"
    fi
  done
# Check if a file name is provided as an argument
if [ $# -le 1 ]; then
  echo "Please specify a file name as an argument."
  exit 1
fi

# Call the function with the provided file name


if [[ ($arg_count -eq 1 && ("$1" == "--help" || "$1" == '-h')) || $arg_count -le 1 ]]; then
  echo "usecase: $0 [-h|--help] [FILTER] [COMMAND] USER LOG"
  exit 0
fi



if [[ ("$1" == "list-currency") && ($arg_count -eq 3)]]; then
  #unzipped=$(gunzip -c $3)
  #if [[ $? -ne 0 ]]; then
   # unzipped=$(cat $3)
  #fi
  read_file $3 | grep "^$2;*.;*.;*." | cut -d ';' -f3 | sort | uniq
  exit 0
fi


if [[ ("$1" == "list") && ($arg_count -le 3) ]]; then
  #unzipped=$(gunzip -c ${*: -1})
  #if [[ $? -ne 0 ]]; then
   # unzipped=$(cat ${*: -1})
  #fi
  unzipped=$(read_multiple_files "$@")
 echo "$unzipped" | grep "$2;"
 exit 0
fi

if [[ ("$1" == "status") ]]; then
  #unzipped=$(gunzip -c ${*: -1})
  #if [[ $? -ne 0 ]]; then
  #  unzipped=$(cat ${*: -1})
    #echo "$unzipped"
  #fi

  unzipped=$(read_file ${*:-1})
  echo "$unzipped" | grep "$2" | awk -F ';' '{currencies[$3]+=$4} END {for (currency in currencies) printf("%s : %.4f\n", currency, currencies[currency])}'
  exit 0
  
fi

#echo "$curr_arg"
#echo "${!curr_arg}"

if [ "${!curr_arg}" = "profit"  ]; then #Hacky solution
  #tradername=unqote "$2"
  #echo "$XTF_PROFIT"
  #unzipped=$(gunzip -c ${*: -1})
  #if [[ $? -ne 0 ]]; then
  #  unzipped=$(cat ${*: -1})
  #fi
  #echo "$@"
  unzipped=$(read_multiple_files "$@")
  if [[ -z "${XTF_PROFIT+x}" ]]; then
  # XTF_PROFIT is set
  XTF_PROFIT=0
fi
 # read_file ${*:-1}
  #echo "${@: -1}"
  user_name_par_num=`expr $curr_arg + 1`
  #echo "${!arg_loc}"
  echo "$unzipped"| grep "${!user_name_par_num}"| grep "$curr_selector" | awk -F ';' "{currencies[\$3]+=\$4} END {for (currency in currencies){ if(currencies[currency]<0)
  { printf(\"%s : %.4f\n\", currency, currencies[currency])}
else 
  {printf(\"%s : %.4f\n\", currency, (currencies[currency]+(currencies[currency]*($XTF_PROFIT/100))))}}}" | sort
  exit 0
  
fi





#What the hell is going on here????
if [[ ($arg_count -le 2) ]]; then
 cat "$2" | grep "$1;" | sort -r 
 exit 0
fi
